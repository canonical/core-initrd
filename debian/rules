#!/usr/bin/make -f
export DH_VERBOSE=1

include /usr/share/dpkg/default.mk

%:
	dh $@ --buildsystem=meson+ninja --sourcedirectory=vendor/systemd --with python3

CLEAN_PATHS=											\
	etc/X11											\
	etc/kernel										\
	etc/modules-load.d									\
	etc/sysctl.d										\
	etc/systemd/journald.conf								\
	etc/systemd/logind.conf									\
	etc/systemd/oomd.conf									\
	etc/systemd/pstore.conf									\
	etc/systemd/sleep.conf									\
	etc/systemd/system.conf									\
	etc/systemd/system/getty.target.wants							\
	etc/systemd/user									\
	etc/systemd/user.conf									\
	etc/tmpfiles.d										\
	etc/udev										\
	etc/xdg											\
	usr/bin/busctl										\
	usr/bin/kernel-install									\
	usr/bin/loginctl									\
	usr/bin/oomctl										\
	usr/bin/systemd-analyze									\
	usr/bin/systemd-cgls									\
	usr/bin/systemd-cgtop									\
	usr/bin/systemd-dissect									\
	usr/bin/systemd-escape									\
	usr/bin/systemd-inhibit									\
	usr/bin/systemd-nspawn									\
	usr/include										\
	usr/lib/*/pkgconfig									\
	usr/lib/kernel										\
	usr/lib/systemd/catalog									\
	usr/lib/systemd/network									\
	usr/lib/systemd/system-generators/systemd-gpt-auto-generator				\
	usr/lib/systemd/system-preset								\
	usr/lib/systemd/system/local-fs.target.wants/tmp.mount					\
	usr/lib/systemd/system/multi-user.target.wants/systemd-logind.service			\
	usr/lib/systemd/system/sysinit.target.wants/systemd-hwdb-update.service			\
	usr/lib/systemd/system/sysinit.target.wants/systemd-journal-catalog-update.service	\
	usr/lib/systemd/system/sysinit.target.wants/systemd-update-done.service			\
	usr/lib/systemd/system/dbus-org.freedesktop.login1.service				\
	usr/lib/systemd/system/systemd-hwdb-update.service					\
	usr/lib/systemd/system/systemd-journal-catalog-update.service				\
	usr/lib/systemd/system/systemd-logind.service						\
	usr/lib/systemd/system/systemd-nspawn@.service						\
	usr/lib/systemd/system/systemd-oomd.service						\
	usr/lib/systemd/system/systemd-update-done.service					\
	usr/lib/systemd/system/tmp.mount							\
	usr/lib/systemd/systemd-logind								\
	usr/lib/systemd/systemd-oomd								\
	usr/lib/systemd/systemd-update-done							\
	usr/lib/systemd/systemd-user-runtime-dir						\
	usr/lib/systemd/user									\
	usr/lib/systemd/user-preset								\
	usr/lib/sysusers.d									\
	usr/lib/tmpfiles.d/etc.conf								\
	usr/lib/udev/rules.d/70-power-switch.rules						\
	usr/lib/udev/rules.d/70-uaccess.rules							\
	/usr/lib/$(DEB_HOST_MULTIARCH)/security							\
	/usr/lib/$(DEB_HOST_MULTIARCH)/libpam_misc*						\
	usr/share/dbus-1/system-services/org.freedesktop.login1.service				\
	usr/share/dbus-1/system-services/org.freedesktop.oom1.service				\
	usr/share/dbus-1/system.d/org.freedesktop.login1.conf					\
	usr/share/dbus-1/system.d/org.freedesktop.oom1.conf					\
	usr/share/doc										\
	usr/share/factory									\
	usr/share/locale									\
	usr/share/pkgconfig									\
	usr/share/polkit-1

override_dh_auto_configure:
	cd vendor/systemd;					\
	    QUILT_PATCHES=debian/patches quilt push -a --fuzz=0

	# Quilt import patches after the last applied patch.
	# Because we will apply the patches after they are all imported,
	# we need to add them reversed order.
	cd vendor/systemd;						\
	find ../systemd-patches/ -name "*.patch" -print0 |		\
	    sort -rz |							\
	    QUILT_PATCHES=debian/patches xargs -0 -n1 quilt import

	cd vendor/systemd; QUILT_PATCHES=debian/patches quilt push -a --fuzz=0

	sed -i '/"minix"/s/^/\/\//' vendor/systemd/src/test/test-path-util.c

	dh_auto_configure --buildsystem=meson+ninja --sourcedirectory=vendor/systemd -- \
      -Db_lto=true \
      -Db_pie=true \
      -Ddebug=false \
      -Dstrip=true \
      -Dsplit-usr=false \
      -Dsplit-bin=true \
      -Dntp-servers=ntp.ubuntu.com \
      -Ddns-servers='' \
      --libdir=/usr/lib/$(DEB_HOST_MULTIARCH) \
      -Drootlibdir=/usr/lib/$(DEB_HOST_MULTIARCH) \
      -Dsysvinit-path='' \
      -Dsysvrcnd-path='' \
      -Dsulogin-path='/usr/bin/sh' \
      -Drpmmacrosdir=no \
      -Dlink-udev-shared=true \
      -Dlink-systemctl-shared=true \
      -Dstatic-libsystemd=false \
      -Dstatic-libudev=false \
      -Ddebug-shell='/usr/bin/sh' \
      -Dvalgrind=false \
      -Dutmp=false \
      -Dhibernate=false \
      -Dldconfig=false \
      -Dresolve=false \
      -Defi=true \
      -Dtpm=true \
      -Dtpm-pcrindex=12 \
      -Denvironment-d=false \
      -Dbinfmt=false \
      -Dcoredump=false \
      -Dlogind=true \
      -Dhostnamed=false \
      -Dlocaled=false \
      -Dmachined=false \
      -Dportabled=false \
      -Dnetworkd=false \
      -Dtimedated=false \
      -Dtimesyncd=false \
      -Dremote=false \
      -Dnss-myhostname=false \
      -Dnss-mymachines=false \
      -Dnss-resolve=false \
      -Dnss-systemd=true \
      -Dfirstboot=false \
      -Drandomseed=false \
      -Dbacklight=false \
      -Dvconsole=false \
      -Dquotacheck=false \
      -Dsysusers=true \
      -Dtmpfiles=true \
      -Dimportd=false \
      -Dhwdb=true \
      -Drfkill=false \
      -Dman=false \
      -Dhtml=false \
      -Dfallback-hostname=ubuntu \
      -Dsystem-uid-max=999 \
      -Dsystem-gid-max=999 \
      -Dadm-group=true \
      -Dwheel-group=false \
      -Ddev-kvm-mode=0660 \
      -Dgroup-render-mode=0660 \
      -Ddefault-dnssec=no \
      -Dselinux=true \
      -Ddefault-kill-user-processes=false \
      -Ddefault-hierarchy=unified \
      -Ddefault-locale=C.UTF-8 \
      -Dnobody-user=nobody \
      -Dnobody-group=nogroup \
      -Dbump-proc-sys-fs-nr-open=false \
      -Dsupport-url=https://www.ubuntu.com/support \
      -Dseccomp=true \
      -Dapparmor=true \
      -Dsmack=false \
      -Dpolkit=false \
      -Dima=false \
      -Dacl=true \
      -Daudit=true \
      -Dblkid=true \
      -Dkmod=true \
      -Dpam=true \
      -Dpamconfdir=no \
      -Dmicrohttpd=false \
      -Dlibcryptsetup=true \
      -Dlibcurl=false \
      -Dlibidn2=true \
      -Dlibiptc=true \
      -Dqrencode=false \
      -Dgcrypt=false \
      -Dgnutls=false \
      -Dopenssl=false \
      -Delfutils=false \
      -Dzlib=false \
      -Dbzip2=false \
      -Dxz=false \
      -Dlz4=true \
      -Dxkbcommon=false \
      -Dpcre2=true \
      -Dglib=false \
      -Ddbus=false \
      -Dgnu-efi=true \
      -Duserdb=false \
      -Dbashcompletiondir=no \
      -Dzshcompletiondir=no \
      -Dinstall-tests=false

override_dh_auto_test:
	LD_LIBRARY_PATH= LD_PRELOAD= dh_auto_test --buildsystem=meson+ninja --sourcedirectory=vendor/systemd || :

override_dh_auto_clean:
	dh_auto_clean --buildsystem=meson+ninja --sourcedirectory=vendor/systemd

	sed -i '/"minix"/s/^\/*//' vendor/systemd/src/test/test-path-util.c

	find vendor/systemd-patches -name "*.patch" -print0 |		\
	    cut -z -d/ -f3 |						\
	    sort -rz |							\
	    (cd vendor/systemd;						\
	     QUILT_PATCHES=debian/patches xargs -0 -n1 quilt delete -r)	\
	  || true

	cd vendor/systemd;					\
	    QUILT_PATCHES=debian/patches quilt pop -a || true

	rm -rf vendor/systemd/.pc


override_dh_auto_install: TEMPLIBDIR := $(shell mktemp -d)
override_dh_auto_install:
	rm -rf debian/tmp
	mkdir debian/tmp
	cp -ar factory/* debian/tmp
	mkdir -p debian/tmp/usr/bin
	mkdir -p debian/tmp/usr/lib64

	# splash functionality
	mkdir -p debian/tmp/usr/share/plymouth/themes/
	cp -a vendor/plymouth-theme-ubuntu-core/ubuntu-core \
		debian/tmp/usr/share/plymouth/themes/
	mkdir -p debian/tmp/usr/share/fonts/
	cp /usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf \
		debian/tmp/usr/share/fonts/Plymouth.ttf

	dh_auto_install --destdir=debian/tmp --buildsystem=meson+ninja --sourcedirectory=vendor/systemd
	for p in $(CLEAN_PATHS); do		\
		rm -r debian/tmp/$$p ;		\
	done
	touch debian/tmp/etc/machine-id
	# This hack should be removed with #113
	sed -i '/^After=/{;s, *plymouth-start[.]service *, ,;/^After= *$$/d;}' debian/tmp/usr/lib/systemd/system/systemd-ask-password-*

	LD_LIBRARY_PATH=`pwd`/debian/tmp/usr/lib/*/:`pwd`/debian/tmp/usr/lib/systemd `pwd`/debian/tmp/usr/bin/systemd-hwdb --root debian/tmp update --usr --strict
	rm -rf debian/tmp/usr/lib/udev/hwdb.d

	/usr/lib/dracut/dracut-install -D $(CURDIR)/debian/tmp --ldd /usr/lib/initramfs-tools/bin/busybox usr/bin/busybox
	set -e; \
	for alias in `debian/tmp/usr/bin/busybox --list-long | grep -v -e busybox -e reboot -e mount -e umount`; do \
		ln -v -s busybox debian/tmp/usr/bin/$$alias; \
	done

	# We want the deps from the systemd libs we have compiled, not from the ones
	# installed in the system. Copy them around so we can point LD_LIBRARY_PATH
	# to them.
	for lib in libudev.so libnss_systemd.so libsystemd.so; do \
		cp -a $(CURDIR)/debian/tmp/lib/$(DEB_HOST_MULTIARCH)/$$lib* $(TEMPLIBDIR); \
	done
	cp -a $(CURDIR)/debian/tmp/usr/lib/systemd/libsystemd-shared* $(TEMPLIBDIR)
	set -e;									\
	for f in								\
		/lib/$(DEB_HOST_MULTIARCH)/libnss_files.so.*			\
		/lib/$(DEB_HOST_MULTIARCH)/libnss_compat.so.*			\
		/lib/$(DEB_HOST_MULTIARCH)/libgcc_s.so.1			\
		/sbin/e2fsck							\
		/sbin/fsck.vfat							\
		/sbin/fsck /bin/umount						\
		/bin/mount							\
		/usr/bin/mountpoint						\
		/bin/kmod							\
		/usr/sbin/depmod						\
		/usr/sbin/insmod						\
		/usr/sbin/lsmod							\
		/usr/sbin/modinfo						\
		/usr/sbin/modprobe						\
		/usr/sbin/rmmod							\
		/usr/bin/dbus-daemon						\
		/lib/systemd/system/dbus.service				\
		/lib/systemd/system/dbus.socket					\
		/usr/share/dbus-1/system.conf					\
		/usr/sbin/plymouthd						\
		/usr/bin/plymouth						\
		/lib/systemd/system/plymouth-start.service			\
		/lib/systemd/system/plymouth-switch-root.service		\
		/usr/lib/$(DEB_HOST_MULTIARCH)/plymouth/label-ft.so		\
		/usr/lib/$(DEB_HOST_MULTIARCH)/plymouth/script.so		\
		/usr/lib/$(DEB_HOST_MULTIARCH)/plymouth/two-step.so		\
		/usr/lib/$(DEB_HOST_MULTIARCH)/plymouth/renderers/*.so		\
		/usr/share/libdrm/amdgpu.ids					\
		/usr/share/plymouth/themes/bgrt/*				\
		/usr/share/plymouth/themes/spinner/*				\
		/usr/bin/unsquashfs						\
		/sbin/dmsetup							\
		/usr/lib/snapd/snap-bootstrap					\
		/usr/lib/snapd/info						\
		/lib/systemd/systemd-bootchart					\
		/lib/systemd/system/snapd.recovery-chooser-trigger.service;	\
	do									\
		LD_PRELOAD=							\
		LD_LIBRARY_PATH=$(TEMPLIBDIR)					\
			/usr/lib/dracut/dracut-install				\
			-D $(CURDIR)/debian/tmp --ldd $$f;			\
	done
	dpkg -L dmsetup | grep rules.d | xargs -L1 /usr/lib/dracut/dracut-install -D $(CURDIR)/debian/tmp --ldd
ifeq ($(DEB_HOST_ARCH),amd64)
	-cp $(CURDIR)/factory/usr/lib/snapd/snap-bootstrap $(CURDIR)/debian/tmp/usr/lib/snapd/snap-bootstrap
else
	-rm $(CURDIR)/factory/usr/lib/snapd/snap-bootstrap
endif
	ln -v -s e2fsck debian/tmp/usr/sbin/fsck.ext4

	set -e; \
	for e in $$(find debian/tmp -type f -executable) \
		/usr/lib/$(DEB_HOST_MULTIARCH)/plymouth/*.so \
		/usr/lib/$(DEB_HOST_MULTIARCH)/plymouth/renderers/*.so; do \
		LD_PRELOAD= LD_LIBRARY_PATH=$(TEMPLIBDIR) \
	 		/usr/lib/dracut/dracut-install -D $(CURDIR)/debian/tmp --resolvelazy $$e ; \
	done
	ldconfig -r debian/tmp
	rm -rf $(TEMPLIBDIR)
	# dracut has installed the libraries from TEMPLIBDIR inside the packaging
	# folder, remove that artifact too.
	rm -rf debian/tmp/tmp/

override_dh_install:
	dh_install
	rm -rf debian/ubuntu-core-initramfs/usr/lib/ubuntu-core-initramfs/main/usr/lib/systemd/boot
ifeq ($(DEB_HOST_ARCH),amd64)
	mkdir -p debian/ubuntu-core-initramfs/usr/lib/ubuntu-core-initramfs/early/
	debian/generate-x86-microcode debian/ubuntu-core-initramfs/usr/lib/ubuntu-core-initramfs/early/microcode.cpio
endif

override_dh_clean:
	# Include ubuntu-core plymouth theme in sources
	[ -d vendor/plymouth-theme-ubuntu-core ] || ( cd vendor; \
		git clone https://github.com/snapcore/plymouth-theme-ubuntu-core )
	dh_clean

override_dh_python3:
	dh_python3 --no-ext-rename

override_dh_fixperms:
	dh_fixperms -Xusr/lib/ubuntu-core-initramfs/main
override_dh_makeshlibs:
	dh_makeshlibs -Xusr/lib/ubuntu-core-initramfs/main
override_dh_shlibdeps:
	dh_shlibdeps -Xusr/lib/ubuntu-core-initramfs/main
override_dh_strip:
	dh_strip -Xsnap-bootstrap
